/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Sales;

import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.OrderManagement.Order;
import model.OrderManagement.OrderItem;

/**
 *
 * @author keerthichandrakanth
 */
public class manualSimulationJPanel extends javax.swing.JPanel {
     private Map<String, Order> orders;
    /**
     * Creates new form manualSimulationJPanel
     */
    public manualSimulationJPanel(Map<String, Order> orders) {
         this.orders = orders;
        initComponents();
        
         //runSimulation();
         refreshTable();
    }
    
       public void refreshTable() {

        DefaultTableModel model = (DefaultTableModel) tblRunSimulation.getModel();
         model.setRowCount(0);
    for (Order order : orders.values()) {
        for (OrderItem item : order.getOrderitems()) {
            Object[] row = new Object[11];
            row[0] = item; // Store the OrderItem object in the first column
            row[1] = item.getSelectedProduct().getFloorPrice();
            row[2] = item.getSelectedProduct().getCeilingPrice();
            row[3] = item.getSelectedProduct().getTargetPrice();
            row[4] = item.getQuantity();
            row[5] = item.getActualPrice();
            row[6] = 0; // Placeholder for Initial Revenue
            row[7] = 0; 
            row[8] = "0%"; // Placeholder for % Change
            row[9] = 0; // Placeholder for New Revenue
            row[10] = 0; // Placeholder for Revenue Impact
            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRunSimulation = new javax.swing.JTable();
        btnEnterNewTarget = new javax.swing.JButton();
        txtNewTargetPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        tblRunSimulation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ProductName", "Floor Price", "Ceiling Price", "Target Price", "Quantity", "Actual Price", "Initial Revenue", "New Target Price", "%After Adjustment", "New Revenue", "Revenue Impact"
            }
        ));
        jScrollPane1.setViewportView(tblRunSimulation);

        btnEnterNewTarget.setText("Enter New Target-->");
        btnEnterNewTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterNewTargetActionPerformed(evt);
            }
        });

        txtNewTargetPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewTargetPriceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Assess the impact of adjusted prices on company sales revenue");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(455, 455, 455)
                        .addComponent(btnEnterNewTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNewTargetPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(468, 468, 468)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterNewTarget)
                    .addComponent(txtNewTargetPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNewTargetPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewTargetPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewTargetPriceActionPerformed

    private void btnEnterNewTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterNewTargetActionPerformed
  // TODO add your handling code here:
     int selectedRowIndex = tblRunSimulation.getSelectedRow();
    if (selectedRowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select an Order item first!");
        return;
    }

    // Fetch the object from the first column and check its type before casting
    Object cellValue = tblRunSimulation.getValueAt(selectedRowIndex, 0);
    if (!(cellValue instanceof OrderItem)) {
        JOptionPane.showMessageDialog(null, "Selected row does not contain a valid Order Item!");
        return;
    }

    OrderItem orderItem = (OrderItem) cellValue;
    int oldTargetPrice = orderItem.getSelectedProduct().getTargetPrice();
    
    int newTargetPrice;
    try {
        newTargetPrice = Integer.parseInt(txtNewTargetPrice.getText());
        if (newTargetPrice < orderItem.getSelectedProduct().getFloorPrice() ||
            newTargetPrice > orderItem.getSelectedProduct().getCeilingPrice()) {
            JOptionPane.showMessageDialog(null, "New target price must be between floor and ceiling prices!");
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter a valid number for the new target price!");
        return;
    }

    // Calculate revenue impacts
    double percentageChange = ((double) (newTargetPrice - oldTargetPrice) / oldTargetPrice) * 100;
    double initialRevenue = orderItem.getActualPrice() * orderItem.getQuantity();
    double newRevenue = newTargetPrice * orderItem.getQuantity();
    double revenueImpact = newRevenue - initialRevenue;

    // Update the table with new values
    tblRunSimulation.setValueAt(initialRevenue, selectedRowIndex, 6);
    tblRunSimulation.setValueAt(newTargetPrice, selectedRowIndex, 7);
    tblRunSimulation.setValueAt(String.format("%.2f%%", percentageChange), selectedRowIndex, 8);
    tblRunSimulation.setValueAt(newRevenue, selectedRowIndex, 9);
    tblRunSimulation.setValueAt(revenueImpact, selectedRowIndex, 10);

    JOptionPane.showMessageDialog(null, "Simulation completed successfully!");
  
  
    }//GEN-LAST:event_btnEnterNewTargetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnterNewTarget;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRunSimulation;
    private javax.swing.JTextField txtNewTargetPrice;
    // End of variables declaration//GEN-END:variables
}
